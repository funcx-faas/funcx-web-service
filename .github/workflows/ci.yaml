name: CI/CD

on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        python-version: [3.7]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install 'poetry==1.1.7'
    - name: Lint
      run: |
        pip install pre-commit
        pre-commit run -a
    - name: Install dependencies
      run: poetry install
    - name: Check for vulnerabilities in libraries
      run: poetry run safety check
    - name: Test with pytest
      run: poetry run coverage run -m pytest -r sx tests/
    - name: Report coverage with Codecov
      run: poetry run codecov --token=${{ secrets.CODECOV_TOKEN }}

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Extract tag name
      shell: bash
      run: echo "##[set-output name=imagetag;]$(echo ${GITHUB_REF##*/})"
      id: extract_tag_name

    - name: Build funcX-web-service Image
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: funcx/web-service:${{ steps.extract_tag_name.outputs.imagetag }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tag: "${GITHUB_REF##*/}"

#  If this is a merge to main branch then we want to restart the web service
#  pod on dev cluster to pick up the changes
  deploy:
    needs: publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: scale to webservice pods to zero
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}
        with:
          args:  scale deployment funcx-funcx-web-service --replicas=0

      - name: scale to webservice pods back up
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}
        with:
          args:  scale deployment funcx-funcx-web-service --replicas=1
